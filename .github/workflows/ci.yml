name: CI

on:
  pull_request:
  push:
    branches:
      - main
  schedule:
  - cron: '00 01 * * *'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# See: https://github.com/pdm-project/pdm/issues/1879
env:
  PDM_DEPS: 'urllib3<2'

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'never'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/docs/**","**/conda.recipe/**"]'
          do_not_skip: '["workflow_dispatch", "schedule"]'


  build:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: ${{ matrix.python-version }}  # Version range or exact version of a Python version to use, the same as actions/setup-python
          # well we use virtualenv here
          # prerelease: true     # Allow prerelease versions to be installed
          # enable-pep582: true  # Enable PEP 582 package loading globally
      - name: Install dependencies
        run: pdm install       # Then you can use pdm in the following steps.
      - name: Test with pytest & generate coverage
        run: |
          pdm run coverage
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
