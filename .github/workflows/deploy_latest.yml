name: Deploy Release Docs
on:
  push:
    tags:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# See: https://github.com/pdm-project/pdm/issues/1879
env:
  PDM_DEPS: 'urllib3<2'

jobs:
  documentation:
    name: Deploy release documentation
    runs-on: ubuntu-latest
    steps:
      - name: Wait for dev documentation to deploy
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: main
          check-name: 'Deploy dev documentation'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: pdm-project/setup-pdm@v3
        name: Setup PDM
        with:
          python-version: 3.11
      - name: Install dependencies
        run: pdm install -G doc
      - name: Set up build cache
        uses: actions/cache@v3
        id: cache
        with:
          key: mkdocs-material-${{ github.ref }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      # derived from:
      # https://github.com/RemoteCloud/public-documentation/blob/dev/.github/workflows/build_docs.yml
      - name: Configure Git user
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Set release notes tag
        run: |
          export RELEASE_TAG_VERSION=${{ github.event.release.tag_name }}
          echo "RELEASE_TAG_VERSION=${RELEASE_TAG_VERSION::3}" >> $GITHUB_ENV
      - name: Deploy documentation
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GOOGLE_ANALYTICS_KEY: ${{ secrets.GOOGLE_ANALYTICS_KEY }}
        run: |
          git fetch origin gh-pages --depth=1
          pdm run mike deploy --update-alias --push ${RELEASE_TAG_VERSION} latest
